plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'co.elastic.apm.android' version "${agent_version}"
    id "com.diffplug.spotless" version "6.11.0"
    id 'com.google.firebase.appdistribution' version '3.0.3'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "co.elastic.apm.opbeans"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        buildConfigField "String", 'OPBEANS_URL', "\"${project.properties.getOrDefault("opbeans_endpoint", "http://10.0.2.2:3000")}\""
        buildConfigField "String", 'OPBEANS_AUTH_TOKEN', "\"${project.properties.getOrDefault("opbeans_auth_token", "")}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            firebaseAppDistribution {
                appId = System.getenv("OPBEANS_APP_ID")
                artifactType = "APK"
                groups = "elastic-testers"
                releaseNotes = project.properties.getOrDefault("firebase_release_notes", "None")
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        animationsDisabled = true
    }
}

elasticApm {
    serviceName = "opbeans-android"
    serverUrl = project.properties.getOrDefault("exporter_endpoint", "http://10.0.2.2:8200")
    secretToken = project.properties.getOrDefault("exporter_auth_token", null)
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.paging:paging-runtime:3.1.1"
    kapt "androidx.room:room-compiler:$room_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        licenseHeader getSourceHeader()
    }
    kotlin {
        target 'src/*/java/**/*.kt'
        licenseHeader getSourceHeader()
    }
}

private String getSourceHeader() {
    '/* \n' +
            'Licensed to Elasticsearch B.V. under one or more contributor\n' +
            'license agreements. See the NOTICE file distributed with\n' +
            'this work for additional information regarding copyright\n' +
            'ownership. Elasticsearch B.V. licenses this file to you under\n' +
            'the Apache License, Version 2.0 (the "License"); you may\n' +
            'not use this file except in compliance with the License.\n' +
            'You may obtain a copy of the License at\n' +
            '\n' +
            '  http://www.apache.org/licenses/LICENSE-2.0\n' +
            '\n' +
            'Unless required by applicable law or agreed to in writing,\n' +
            'software distributed under the License is distributed on an\n' +
            '"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n' +
            'KIND, either express or implied.  See the License for the\n' +
            'specific language governing permissions and limitations\n' +
            'under the License. \n' +
            '*/'
}
